{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAMA,IAAIC,EAqBJ,SAASC,EAAWC,EAAUC,GAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BT,EAASU,YAAW,KACdN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnCEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAIxB,SAAsBC,GACpBA,EAAEC,iBACFC,aAAahB,GAEb,MAAQG,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAEM,OAAOC,SACzC,IAAIC,EAAaC,OAAON,EAAMO,OAE9B,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAOK,MAAOC,GAAK,EACtCxB,EAAWwB,EAAEH,GACVI,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,KACjBL,EAAA6B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,SAAY0B,OAChE,EAAK3B,WAAUC,WAChBL,EAAA6B,OAAMG,QAAC,sBAAS5B,QAA8BC,SACjDmB,GAAcC,OAAOL,EAAKM,OAE7BV,EAAEiB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener(\"submit\", onFormSubmit)\n\nlet timeId;\n\nfunction onFormSubmit(e){\n  e.preventDefault();\n  clearTimeout(timeId);\n\n  const { delay, step, amount } = e.target.elements;\n  let totalDelay = Number(delay.value) \n  \n  for (let i = 1; i <= amount.value; i += 1){\n    newPromise(i,totalDelay)\n      .then(({ position, delay }) => \n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n      .catch(({ position, delay }) => \n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`))\n     totalDelay += Number(step.value);\n  }\n  e.currentTarget.reset();\n}\n\n\nfunction newPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    timeId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  }\n  )\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$timeId","$47d4ff9957288465$var$newPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","clearTimeout","delay1","step","amount","target","elements","totalDelay","Number","value","i","then","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.3bd85d00.js.map"}